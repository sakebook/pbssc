#!/usr/bin/env bash
set -e

timestamp=$(date +%Y%m%d%H%M%S)
filename="$timestamp".png

# check command exists
check_exist_command_adb() {
  if ! command -v adb &> /dev/null; then
    echo "adb command not found!" >&2
    exit 1
  fi
}

# check command exists
check_exist_command_idevicescreenshot() {
  if ! command -v idevicescreenshot &> /dev/null; then
    echo "idevicescreenshot command not found!" >&2
    exit 1
  fi
}

# capture from android device
capture_android() {
  device_id=$(adb devices | sed '1d' | awk '{ print $1 }')
  if [[ -z $device_id ]]; then
    echo "Connected android device not found!" >&2
    exit 1
  fi
  if [[ -z $custom_filename ]]; then
    filepath="$PBSSC_IMAGE_PATH/android-$filename"
  else
    filepath="$PBSSC_IMAGE_PATH/$custom_filename"
  fi
  adb exec-out screencap -p > "$filepath"
}

# capture from ios device
capture_ios() {
  device_id=$(idevice_id | awk '{ print $1 }')
  if [[ -z $device_id ]]; then
    echo "Connected ios device not found!" >&2
    exit 1
  fi
  if [[ -z $custom_filename ]]; then
    filepath="$PBSSC_IMAGE_PATH/ios-$filename"
  else
    filepath="$PBSSC_IMAGE_PATH/$custom_filename"
  fi
  idevicescreenshot "$filepath"
}

# image set to clipboard
copy_to_clipboard () {
  osascript -e "
  on run
    set the clipboard to (read POSIX file \"$filepath\" as «class PNGf»)
  end
  "
  echo "Set image to clipboard from $filepath"
}

help_text() {
  cat << EOS
Usage: pbssc [OPTIONS] [FILE]

options:
  -a   save capture and set clipboard from connected android device
  -i   save capture and set clipboard from connected ios device
  -s   save capture from connected devices

file:
  Supported PNG format.

Homepage:
  https://github.com/sakebook/pbssc
EOS
}

# check option
while getopts aish OPT
do
  case $OPT in
    a) android_flag=true;;
    i) ios_flag=true;;
    s) save_flag=true;;
    h) help_flag=true;;
    *) echo "'-$OPTARG' is not support.";;
  esac
done

# check image path
if [[ -z $PBSSC_IMAGE_PATH ]]; then
  echo 'Please set the "PBSSC_IMAGE_PATH" environment variable and try again.' >&2
  exit 1
fi

# check args count
if [[ $# -gt 2 ]] ; then
  echo 'Too many args! Please run [-h] option.' >&2
  exit 1
fi

# check custom filename
if [[ $# = 2 ]]; then
  custom_filename=$2
fi

if [[ -n $help_flag ]]; then
  help_text
elif [[ -n $save_flag ]]; then
  unset custom_filename # Not supported custom filename on -s option
  check_exist_command_idevicescreenshot
  capture_ios
  check_exist_command_adb
  capture_android
elif [[ -n $android_flag ]]; then
  check_exist_command_adb
  capture_android
  copy_to_clipboard
elif [[ -n $ios_flag ]]; then
  check_exist_command_idevicescreenshot
  capture_ios
  copy_to_clipboard
fi

if (( OPTIND == 1 )); then
 echo "Please set the options."
fi
