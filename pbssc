#!/usr/bin/env bash
set -e

timestamp=$(date +%Y%m%d%H%M%S)
filename="ss-$timestamp".png

# check args count
if [ $# -gt 2 ] ; then
  echo 'Too many args! Please run [-h] option.' >&2
  exit 1
fi

# check filename
if [ $# = 2 ]; then
  filename=$2
fi

# check image path
if [ -z $PBSSC_IMAGE_PATH ]; then
  echo 'Please set the "PBSSC_IMAGE_PATH" environment variable and try again.' >&2
  exit 1
fi

# capture from android device
capture_android() {
  device_id=$(adb devices | sed '1d' | awk '{ print $1 }')
  if [ -z "$device_id" ]; then
    echo "Connected android device not found!" >&2
    exit 1
  fi
  adb exec-out screencap -p > "$PBSSC_IMAGE_PATH/$filename"
}

# capture from ios device
capture_ios() {
  device_id=$(idevice_id | awk '{ print $1 }')
  if [ -z "$device_id" ]; then
    echo "Connected ios device not found!" >&2
    exit 1
  fi
  idevicescreenshot "$PBSSC_IMAGE_PATH/$filename"
}

# image set to clipboard
copy_to_clipboard () {
  clipboard_file="$PBSSC_IMAGE_PATH/$filename"
  $(
   osascript -e "
   on run
     set the clipboard to POSIX file \"$clipboard_file\"
   end
  ")
  echo "Set image to clipboard from $PBSSC_IMAGE_PATH/$filename"
}

help_text() {
  cat << EOS
Usage: pbssc [OPTIONS] [FILE]

options:
  -a   set capture and clipboard from connected android device
  -i   set capture and clipboard from connected ios device

file:
  Supported PNG format.

Homepage:
  https://github.com/sakebook/pbssc
EOS
}

# check option
while getopts hai OPT
do
  case $OPT in
    a)
      if ! command -v adb &> /dev/null; then
        echo "adb command not found!" >&2
        exit 1
      fi
      capture_android
      copy_to_clipboard
      ;;
    i)
      if ! command -v idevicescreenshot &> /dev/null; then
        echo "idevicescreenshot command not found!" >&2
        exit 1
      fi
      capture_ios
      copy_to_clipboard
      ;;
    h) help_text;;
    *) echo "'-$OPTARG' is not support.";;
  esac
done

if (( $OPTIND == 1 )); then
   echo "Please set the options [-i] or [-a]."
fi
